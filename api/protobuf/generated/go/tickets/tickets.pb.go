// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.14.0
// source: tickets/tickets.proto

package tickets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateTicketIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID      uint64   `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Name        string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description string   `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Price       *float32 `protobuf:"fixed32,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
	Quantity    uint32   `protobuf:"varint,5,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CategoryID  uint32   `protobuf:"varint,6,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	TagIDs      []uint32 `protobuf:"varint,7,rep,packed,name=tagIDs,proto3" json:"tagIDs,omitempty"`
	Attachments []string `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *CreateTicketIn) Reset() {
	*x = CreateTicketIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketIn) ProtoMessage() {}

func (x *CreateTicketIn) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketIn.ProtoReflect.Descriptor instead.
func (*CreateTicketIn) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{0}
}

func (x *CreateTicketIn) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *CreateTicketIn) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateTicketIn) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTicketIn) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *CreateTicketIn) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *CreateTicketIn) GetCategoryID() uint32 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *CreateTicketIn) GetTagIDs() []uint32 {
	if x != nil {
		return x.TagIDs
	}
	return nil
}

func (x *CreateTicketIn) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

type CreateTicketOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TicketID uint64 `protobuf:"varint,1,opt,name=ticketID,proto3" json:"ticketID,omitempty"`
}

func (x *CreateTicketOut) Reset() {
	*x = CreateTicketOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTicketOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTicketOut) ProtoMessage() {}

func (x *CreateTicketOut) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTicketOut.ProtoReflect.Descriptor instead.
func (*CreateTicketOut) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{1}
}

func (x *CreateTicketOut) GetTicketID() uint64 {
	if x != nil {
		return x.TicketID
	}
	return 0
}

type GetTicketIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *GetTicketIn) Reset() {
	*x = GetTicketIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketIn) ProtoMessage() {}

func (x *GetTicketIn) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketIn.ProtoReflect.Descriptor instead.
func (*GetTicketIn) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{2}
}

func (x *GetTicketIn) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type Attachment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID        uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	TicketID  uint64                 `protobuf:"varint,2,opt,name=ticketID,proto3" json:"ticketID,omitempty"`
	Link      string                 `protobuf:"bytes,3,opt,name=link,proto3" json:"link,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *Attachment) Reset() {
	*x = Attachment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attachment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attachment) ProtoMessage() {}

func (x *Attachment) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attachment.ProtoReflect.Descriptor instead.
func (*Attachment) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{3}
}

func (x *Attachment) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *Attachment) GetTicketID() uint64 {
	if x != nil {
		return x.TicketID
	}
	return 0
}

func (x *Attachment) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *Attachment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Attachment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetTicketOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint64                 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UserID      uint64                 `protobuf:"varint,2,opt,name=userID,proto3" json:"userID,omitempty"`
	Name        string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Price       *float32               `protobuf:"fixed32,5,opt,name=price,proto3,oneof" json:"price,omitempty"`
	Quantity    uint32                 `protobuf:"varint,6,opt,name=quantity,proto3" json:"quantity,omitempty"`
	CategoryID  uint32                 `protobuf:"varint,7,opt,name=categoryID,proto3" json:"categoryID,omitempty"`
	TagIDs      []uint32               `protobuf:"varint,8,rep,packed,name=tagIDs,proto3" json:"tagIDs,omitempty"`
	Attachments []*Attachment          `protobuf:"bytes,9,rep,name=attachments,proto3" json:"attachments,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
}

func (x *GetTicketOut) Reset() {
	*x = GetTicketOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketOut) ProtoMessage() {}

func (x *GetTicketOut) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketOut.ProtoReflect.Descriptor instead.
func (*GetTicketOut) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{4}
}

func (x *GetTicketOut) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *GetTicketOut) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *GetTicketOut) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetTicketOut) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GetTicketOut) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *GetTicketOut) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

func (x *GetTicketOut) GetCategoryID() uint32 {
	if x != nil {
		return x.CategoryID
	}
	return 0
}

func (x *GetTicketOut) GetTagIDs() []uint32 {
	if x != nil {
		return x.TagIDs
	}
	return nil
}

func (x *GetTicketOut) GetAttachments() []*Attachment {
	if x != nil {
		return x.Attachments
	}
	return nil
}

func (x *GetTicketOut) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *GetTicketOut) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetTicketsOut struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tickets []*GetTicketOut `protobuf:"bytes,1,rep,name=tickets,proto3" json:"tickets,omitempty"`
}

func (x *GetTicketsOut) Reset() {
	*x = GetTicketsOut{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTicketsOut) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTicketsOut) ProtoMessage() {}

func (x *GetTicketsOut) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTicketsOut.ProtoReflect.Descriptor instead.
func (*GetTicketsOut) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{5}
}

func (x *GetTicketsOut) GetTickets() []*GetTicketOut {
	if x != nil {
		return x.Tickets
	}
	return nil
}

type GetUserTicketsIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserID uint64 `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *GetUserTicketsIn) Reset() {
	*x = GetUserTicketsIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserTicketsIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserTicketsIn) ProtoMessage() {}

func (x *GetUserTicketsIn) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserTicketsIn.ProtoReflect.Descriptor instead.
func (*GetUserTicketsIn) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{6}
}

func (x *GetUserTicketsIn) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type DeleteTicketIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint64 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *DeleteTicketIn) Reset() {
	*x = DeleteTicketIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteTicketIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTicketIn) ProtoMessage() {}

func (x *DeleteTicketIn) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTicketIn.ProtoReflect.Descriptor instead.
func (*DeleteTicketIn) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteTicketIn) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

type UpdateTicketIn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID          uint64   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Name        *string  `protobuf:"bytes,2,opt,name=name,proto3,oneof" json:"name,omitempty"`
	Description *string  `protobuf:"bytes,3,opt,name=description,proto3,oneof" json:"description,omitempty"`
	Price       *float32 `protobuf:"fixed32,4,opt,name=price,proto3,oneof" json:"price,omitempty"`
	Quantity    *uint32  `protobuf:"varint,5,opt,name=quantity,proto3,oneof" json:"quantity,omitempty"`
	CategoryID  *uint32  `protobuf:"varint,6,opt,name=categoryID,proto3,oneof" json:"categoryID,omitempty"`
	TagIDs      []uint32 `protobuf:"varint,7,rep,packed,name=tagIDs,proto3" json:"tagIDs,omitempty"`
	Attachments []string `protobuf:"bytes,8,rep,name=attachments,proto3" json:"attachments,omitempty"`
}

func (x *UpdateTicketIn) Reset() {
	*x = UpdateTicketIn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_tickets_tickets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTicketIn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTicketIn) ProtoMessage() {}

func (x *UpdateTicketIn) ProtoReflect() protoreflect.Message {
	mi := &file_tickets_tickets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTicketIn.ProtoReflect.Descriptor instead.
func (*UpdateTicketIn) Descriptor() ([]byte, []int) {
	return file_tickets_tickets_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateTicketIn) GetID() uint64 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateTicketIn) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *UpdateTicketIn) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *UpdateTicketIn) GetPrice() float32 {
	if x != nil && x.Price != nil {
		return *x.Price
	}
	return 0
}

func (x *UpdateTicketIn) GetQuantity() uint32 {
	if x != nil && x.Quantity != nil {
		return *x.Quantity
	}
	return 0
}

func (x *UpdateTicketIn) GetCategoryID() uint32 {
	if x != nil && x.CategoryID != nil {
		return *x.CategoryID
	}
	return 0
}

func (x *UpdateTicketIn) GetTagIDs() []uint32 {
	if x != nil {
		return x.TagIDs
	}
	return nil
}

func (x *UpdateTicketIn) GetAttachments() []string {
	if x != nil {
		return x.Attachments
	}
	return nil
}

var File_tickets_tickets_proto protoreflect.FileDescriptor

var file_tickets_tickets_proto_rawDesc = []byte{
	0x0a, 0x15, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xf9,
	0x01, 0x0a, 0x0e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00,
	0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75,
	0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x12, 0x20,
	0x0a, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x2d, 0x0a, 0x0f, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x44, 0x22, 0x1d, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x22, 0xc0, 0x01, 0x0a, 0x0a, 0x41, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x74, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x90, 0x03, 0x0a, 0x0c,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x12, 0x0e, 0x0a, 0x02,
	0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72,
	0x69, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x48, 0x00, 0x52, 0x05, 0x70, 0x72, 0x69,
	0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x44, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x12, 0x35, 0x0a, 0x0b, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x12, 0x38, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x22, 0x40,
	0x0a, 0x0d, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x12,
	0x2f, 0x0a, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x52, 0x07, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x22, 0x2a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x20, 0x0a, 0x0e,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49, 0x44, 0x22, 0xba,
	0x02, 0x0a, 0x0e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x17, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x25, 0x0a, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x01, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01,
	0x01, 0x12, 0x19, 0x0a, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x48, 0x02, 0x52, 0x05, 0x70, 0x72, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1f, 0x0a, 0x08,
	0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x03,
	0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x88, 0x01, 0x01, 0x12, 0x23, 0x0a,
	0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x48, 0x04, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x88,
	0x01, 0x01, 0x12, 0x16, 0x0a, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x06, 0x74, 0x61, 0x67, 0x49, 0x44, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x74,
	0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0b, 0x61, 0x74, 0x74, 0x61, 0x63, 0x68, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x07, 0x0a, 0x05,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x42,
	0x0b, 0x0a, 0x09, 0x5f, 0x71, 0x75, 0x61, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x42, 0x0d, 0x0a, 0x0b,
	0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x44, 0x32, 0x9e, 0x03, 0x0a, 0x0e,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x43,
	0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17,
	0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x1a, 0x18, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75,
	0x74, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x12, 0x14, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x1a, 0x15, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x3e, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x12, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12,
	0x45, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x12, 0x19, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x55,
	0x73, 0x65, 0x72, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x74,
	0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x4f, 0x75, 0x74, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x6e, 0x1a,
	0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0c, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x2e, 0x74, 0x69, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x6e, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x42, 0x3f, 0x5a, 0x3d,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x44, 0x4b, 0x68, 0x6f, 0x72,
	0x6b, 0x6f, 0x76, 0x2f, 0x68, 0x6d, 0x74, 0x6d, 0x2d, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x3b, 0x74, 0x69, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_tickets_tickets_proto_rawDescOnce sync.Once
	file_tickets_tickets_proto_rawDescData = file_tickets_tickets_proto_rawDesc
)

func file_tickets_tickets_proto_rawDescGZIP() []byte {
	file_tickets_tickets_proto_rawDescOnce.Do(func() {
		file_tickets_tickets_proto_rawDescData = protoimpl.X.CompressGZIP(file_tickets_tickets_proto_rawDescData)
	})
	return file_tickets_tickets_proto_rawDescData
}

var file_tickets_tickets_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_tickets_tickets_proto_goTypes = []interface{}{
	(*CreateTicketIn)(nil),        // 0: tickets.CreateTicketIn
	(*CreateTicketOut)(nil),       // 1: tickets.CreateTicketOut
	(*GetTicketIn)(nil),           // 2: tickets.GetTicketIn
	(*Attachment)(nil),            // 3: tickets.Attachment
	(*GetTicketOut)(nil),          // 4: tickets.GetTicketOut
	(*GetTicketsOut)(nil),         // 5: tickets.GetTicketsOut
	(*GetUserTicketsIn)(nil),      // 6: tickets.GetUserTicketsIn
	(*DeleteTicketIn)(nil),        // 7: tickets.DeleteTicketIn
	(*UpdateTicketIn)(nil),        // 8: tickets.UpdateTicketIn
	(*timestamppb.Timestamp)(nil), // 9: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),         // 10: google.protobuf.Empty
}
var file_tickets_tickets_proto_depIdxs = []int32{
	9,  // 0: tickets.Attachment.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 1: tickets.Attachment.updatedAt:type_name -> google.protobuf.Timestamp
	3,  // 2: tickets.GetTicketOut.attachments:type_name -> tickets.Attachment
	9,  // 3: tickets.GetTicketOut.createdAt:type_name -> google.protobuf.Timestamp
	9,  // 4: tickets.GetTicketOut.updatedAt:type_name -> google.protobuf.Timestamp
	4,  // 5: tickets.GetTicketsOut.tickets:type_name -> tickets.GetTicketOut
	0,  // 6: tickets.TicketsService.CreateTicket:input_type -> tickets.CreateTicketIn
	2,  // 7: tickets.TicketsService.GetTicket:input_type -> tickets.GetTicketIn
	10, // 8: tickets.TicketsService.GetTickets:input_type -> google.protobuf.Empty
	6,  // 9: tickets.TicketsService.GetUserTickets:input_type -> tickets.GetUserTicketsIn
	7,  // 10: tickets.TicketsService.DeleteTicket:input_type -> tickets.DeleteTicketIn
	8,  // 11: tickets.TicketsService.UpdateTicket:input_type -> tickets.UpdateTicketIn
	1,  // 12: tickets.TicketsService.CreateTicket:output_type -> tickets.CreateTicketOut
	4,  // 13: tickets.TicketsService.GetTicket:output_type -> tickets.GetTicketOut
	5,  // 14: tickets.TicketsService.GetTickets:output_type -> tickets.GetTicketsOut
	5,  // 15: tickets.TicketsService.GetUserTickets:output_type -> tickets.GetTicketsOut
	10, // 16: tickets.TicketsService.DeleteTicket:output_type -> google.protobuf.Empty
	10, // 17: tickets.TicketsService.UpdateTicket:output_type -> google.protobuf.Empty
	12, // [12:18] is the sub-list for method output_type
	6,  // [6:12] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_tickets_tickets_proto_init() }
func file_tickets_tickets_proto_init() {
	if File_tickets_tickets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_tickets_tickets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTicketOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attachment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTicketsOut); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetUserTicketsIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteTicketIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_tickets_tickets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTicketIn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_tickets_tickets_proto_msgTypes[0].OneofWrappers = []interface{}{}
	file_tickets_tickets_proto_msgTypes[4].OneofWrappers = []interface{}{}
	file_tickets_tickets_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_tickets_tickets_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_tickets_tickets_proto_goTypes,
		DependencyIndexes: file_tickets_tickets_proto_depIdxs,
		MessageInfos:      file_tickets_tickets_proto_msgTypes,
	}.Build()
	File_tickets_tickets_proto = out.File
	file_tickets_tickets_proto_rawDesc = nil
	file_tickets_tickets_proto_goTypes = nil
	file_tickets_tickets_proto_depIdxs = nil
}
